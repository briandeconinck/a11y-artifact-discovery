name: Pre-Staging Review Accessibility Testing
description: Complete required Foundational Testing prior to your Staging Review
title: "[Accessibility Testing]: [Insert Product Name]"
labels: ["a11y-foundational-testing"]
assignees:
  - briandeconinck
body:
  - type: markdown
    attributes:
      value: |
        ## Introduction
  - type: markdown
    attributes:
      value: |
        Instructions up here referencing [Platform website testing info](https://depo-platform-documentation.scrollhelp.site/developer-docs/prepare-for-an-accessibility-staging-review) and how to get help from Shared Support.
        
        Foundational testing is **required** prior to Staging Review, and consists of four major parts:
        - Use of color and color contrast
        - Automated testing with axe by Deque
        - Content zoom and resizing
        - Keyboard navigation
        
        Advanced testing is **recommended** but optional prior to Staging Review. Try to do as much as you can!
  - type: markdown
    attributes:
      value: |
        ## Use of color and color contrast
  - type: markdown
    attributes:
      value: |
        Color must not be the only way information is communicated, and all elements must have sufficient contrast against the page background and neighboring elements. Multiple tools exist for testing use of color and color contrast, but we recommend checking color pairings with [WhoCanUse](https://www.whocanuse.com/) and reviewing your product with the [Colorblindly extension for Google Chrome](https://chrome.google.com/webstore/detail/colorblindly/floniaahmccleoclneebhhmnjgdfijgg). 

        [Learn more about testing for color and color contrast](https://depo-platform-documentation.scrollhelp.site/developer-docs/prepare-for-an-accessibility-staging-review#Prepareforanaccessibilitystagingreview-Colortests) or [watch a color and color contrast testing demo](https://www.youtube.com/watch?v=ReLtfiZlSCo).
  - type: input
    id: color-tester
    attributes:
      label: Who completed the use of color and color contrast test?
      description: Enter their GitHub username to tag them in this ticket.
  - type: checkboxes
    id: color-checks
    attributes:
      label: Use of color and color contrast checks
      options:
        - label: All text of 20px or smaller has a 4.5:1 contrast ratio to its background (or better)
        - label: All text of 20px or larger has a 3:1 contrast ratio to its background (or better)
        - label: Non-text elements have a 3:1  contrast ratio to their background and to neighboring elements (or better)
        - label: Color is not the only way to distinguish links from other text (eg. links are underlined)
        - label: Any charts, maps, infographics, and tables convey all information without only relying on color
        - label: Content does not refer to color, especially when providing user instructions (eg. "Click the blue button")
  - type: textarea
    id: color-notes
    attributes:
      label: How did color testing go?
      description: Do you have any questions or notes? Is there anything you want someone to look at before Staging Review? Be sure to reference any GitHub issues you've created as a result of this testing!
  - type: markdown
    attributes:
      value: |
        ## Automated testing with axe by Deque
  - type: markdown
    attributes:
      value: |
        [axe by Deque Systems](https://www.deque.com/axe/) is our required automated testing tool, and is also available as a [free browser extension for Chrome, Firefox, and Edge](https://www.deque.com/axe/browser-extensions/). Although automated testing can't detect all accessibility issues, axe is very good at detecting certain common problems in your code.
        
        With the axe DevTools browser extension installed:
        1. Right click on the page you're testing.
        2. Select "Inspect" to open your browser's developer tools.
        3. Select the "axe DevTools" tab.
        4. Select "Scan all of my page" to run axe.
        
        We recommend that front-end engineers test using axe as part of their daily development to catch and resolve issues while coding, and then complete a comprehensive page-by-page scan prior to Staging Review.
        
        [Learn more about testing with axe](https://depo-platform-documentation.scrollhelp.site/developer-docs/prepare-for-an-accessibility-staging-review#Prepareforanaccessibilitystagingreview-Axescansindailydevelopment.1) or [watch an axe DevTools demo](https://www.youtube.com/watch?v=WOBTHDDTytg).
        
        axe must also be integrated into your product's [end-to-end testing with Cypress](https://depo-platform-documentation.scrollhelp.site/developer-docs/end-to-end-testing-with-cypress). See also [Writing an end-to-end test](https://depo-platform-documentation.scrollhelp.site/developer-docs/writing-an-end-to-end-test) and [Accessibility testing helper functions](https://depo-platform-documentation.scrollhelp.site/developer-docs/accessibility-testing-helper-functions).
  - type: input
    id: axe-tester
    attributes:
      label: Who completed the axe scans?
      description: Enter their GitHub username to tag them in this ticket.
  - type: checkboxes
    id: axe-checks
    attributes:
      label: axe checks
      options:
        - label: Each page has been scanned using axe (results shared below)
        - label: axe is integrated into your end-to-end testing
  - type: textarea
    id: axe-issues
    attributes:
      label: axe DevTools scan results
      description: Share any unresolved issues detected by axe, organized by URL tested. You don't have to tell us about anything that's not part of your product.
  - type: textarea
    id: axe-notes
    attributes:
      label: How did axe testing go?
      description: Do you have any questions or notes? Is there anything you want someone to look at before Staging Review? Be sure to reference any GitHub issues you've created as a result of this testing!
  - type: markdown
    attributes:
      value: |
        ## Content zoom and resizing
  - type: markdown
    attributes:
      value: |
        ## Keyboard navigation
  - type: markdown
    attributes:
      value: |
        All pages and user flows (forms, data entry, navigation, user interface, etc.) must be navigable using a keyboard. To test keyboard navigation, press [Tab] to move focus to the next element that can receive keyboard focus and [Shift] + [Tab] to move focus to the previous element.
        
        [Learn more about keyboard navigation testing](https://depo-platform-documentation.scrollhelp.site/developer-docs/prepare-for-an-accessibility-staging-review#Keyboard-navigation-check) or [watch a keyboard navigation testing demo](https://www.youtube.com/watch?v=YvPEK1Y08uM).
  - type: input
    id: keyboard-tester
    attributes:
      label: Who completed the keyboard navigation test?
      description: Enter their GitHub username to tag them in this ticket.
  - type: checkboxes
    id: keyboard-checks
    attributes:
      label: Keyboard navigation checks
      options:
        - label: Each link, button, form input, checkbox, radio button, select menu, and custom element can receive keyboard focus
        - label: All elements under focus have a visible focus indicator
        - label: The order of [Tab] stops made sense and was appropriate for completing tasks
  - type: textarea
    id: keyboard-notes
    attributes:
      label: How did keyboard testing go?
      description: Do you have any questions or notes? Is there anything you want someone to look at before Staging Review? Be sure to reference any GitHub issues you've created as a result of this testing!
  - type: markdown
    attributes:
      value: |
        ## Advanced testing (optional)
  - type: markdown
    attributes:
      value: |
        ... and so on, for each part of Foundational testing.
